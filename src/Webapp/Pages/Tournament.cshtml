@page "/tournaments/{tournamentId}"
@model Webapp.Pages.TournamentModel
@{
  ViewData["Title"] = "Tournament";
  Layout = "_MainLayout";
}

@await Html.PartialAsync("_TitlePartial", Model.Tournament.Name)

@if (Model.IsOwner)
{
  <a class="btn" asp-area="" asp-page="/EditTournament" asp-route-tournamentId=@Model.Tournament.Id
  asp-route-currentPlayerId=@Model.CurrentPlayer?.Id>Edit tournament</a>

  <p class="separator"></p>
}


@if (Model.IsOwner)
{
  <a class="btn" asp-area="" asp-page="/CreatePlayers" asp-route-tournamentId=@Model.Tournament.Id
  asp-route-currentPlayerId=@Model.CurrentPlayer?.Id>Create players</a>
}

<h2 class="section-title">Players</h2>

<ul class="w-64 flex flex-col gap-2">
  @if (Model.Players.Count() == 0) {
    <li class="w-full text-stone-400">No players</li>
  }
  @foreach (var player in Model.Players)
  {
    <li class="w-full">@await Html.PartialAsync("_PlayerPartial", new PlayerPartial
 {
   CurrentPlayer = Model.CurrentPlayer,
   Player = player
 })</li>
  }
</ul>

<p class="separator"></p>

@if (Model.IsOwner)
{
  <a class="btn" asp-area="" asp-page="/CreateGame" asp-route-tournamentId=@Model.Tournament.Id
  asp-route-currentPlayerId=@Model.CurrentPlayer?.Id>Create game</a>
}

<h2 class="section-title">Games</h2>

<ul class="relative w-64 flex flex-col gap-2">
  @if (Model.Games.Count() == 0) {
    <li class="w-full text-stone-400">No games</li>
  }
  @foreach (var game in Model.Games)
  {
    <li>
      <a class="flex justify-center border border-stone-900 rounded-md p-1 w-full" asp-area="" asp-page="/Game" asp-route-tournamentId=@Model.Tournament.Id asp-route-gameId=@game.Id
        asp-route-currentPlayerId=@Model.CurrentPlayer?.Id>@game.Name</a>
    </li>
  }
</ul>